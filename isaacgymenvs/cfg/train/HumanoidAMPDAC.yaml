params:  

  seed: ${...seed}

  algo:
    name: amp_dac

  model:
    name: discriminator_actor_critic

  network:
    name: discriminator_actor_critic
    separate: True
    space:
      continuous:
    
    mlp:
      units: [512, 256]
      activation: relu
      
      initializer:
        name: default

    disc:
      units: [1024, 512]
      activation: relu

      initializer:
        name: default

    log_std_bounds: [-5, 2]

  load_checkpoint: False
  load_path: nn/Humanoid.pth

  config:
    name: ${resolve_default:HumanoidDAC,${....experiment}}
    env_name: rlgpu
    normalize_input: True
    reward_shaper:
      scale_value: 1.0
    max_epochs: 50000
    num_steps_per_episode: 8
    save_best_after: 100
    save_frequency: 1000
    gamma: 0.99
    init_alpha: 1.0
    alpha_lr: 0.005
    actor_lr: 0.0005
    critic_lr: 0.0005
    critic_tau: 0.005
    batch_size: 4096
    learnable_temperature: true
    num_seed_steps: 5
    num_warmup_steps: 10
    replay_buffer_size: 1000000
    num_actors: ${....task.env.numEnvs}

    # amp config
    normalize_amp_input: true
    amp_obs_demo_buffer_size: 200000

    # discriminator config
    discriminator_lr: 5e-5
    disc_coef: 5
    disc_logit_reg: 0.05
    disc_grad_penalty: 0.2
    disc_reward_scale: 2
    disc_weight_decay: 0.0001
    num_disc_updates_per_ac_update: 1
    update_disc_during_expl_period: false

    # reward weighting
    task_reward_w: 0.0
    disc_reward_w: 1.0
    disc_reward_type: airl
